% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fft.R
\name{read_audio_fft}
\alias{read_audio_fft}
\alias{read_audio_bin}
\title{Read audio frequency data}
\usage{
read_audio_fft(
  audio,
  window = hanning(1024),
  overlap = 0.75,
  sample_rate = NULL
)

read_audio_bin(audio, channels = NULL, sample_rate = NULL)
}
\arguments{
\item{audio}{path to the audio file}

\item{window}{vector with weights defining the moving \link[=hanning]{fft window function}.
The length of this vector is the size of the window and hence determines the output
frequency range.}

\item{overlap}{value between 0 and 1 of overlap proportion between moving fft windows}

\item{sample_rate}{downsample audio to reduce FFT output size. Default keeps sample
rate from the input file.}

\item{channels}{number of output channels, set to 1 to conver to mono sound}
}
\description{
Very fast implementation to read arbitrary audio file format and directly
stream-convert to frequency domain (spectrum data) using FFmpeg built-in FFT.
}
\details{
There is a built-in \code{plot()} method for data returned by \link{read_audio_fft}. The
\link{av_audio_animation} generates a video based on the fft data plot, with a moving
bar and background sound.
}
\examples{
wonderland <- system.file('samples/Synapsis-Wonderland.mp3', package='av')
dim(read_audio_fft(wonderland))
dim(read_audio_fft(wonderland, hamming(4096)))
dim(read_audio_fft(wonderland, sample_rate = 8000))
}
